!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},t=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},r=(e,t,r)=>{(e=>e.some(e=>!e.validity.valid))(e)?n(t,r):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},n=(e,t)=>{e.disabled=!0,console.log(t),e.classList.add(t.inactiveButtonClass)};function a(e,t,r="Save",n="Saving..."){t?(e.textContent=n,e.disabled=!0):(e.textContent=r,e.disabled=!1)}function o(e,t,r="Delete",n="Deleting..."){t?(e.textContent=n,e.disabled=!0):(e.textContent=r,e.disabled=!1)}const s=new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}_handleServerResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}async getInitialCards(){const e=await fetch(`${this._baseUrl}/cards`,{headers:this._headers});return this._handleServerResponse(e)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._handleServerResponse)}editUserInfo({name:e,about:t}){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(e=>this._handleServerResponse(e))}addCards({name:e,link:t}){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(e=>this._handleServerResponse(e))}changeLikeStatus(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then(this._handleServerResponse)}editUserAvatar({avatar:e}){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._handleServerResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"delete",headers:this._headers}).then(this._handleServerResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"397ad35c-b1dc-4afd-a845-5f2004b6d0d1","Content-Type":"application/json"}});s.getAppInfo().then(([e,t])=>{R.textContent=t.name,D.textContent=t.about,c.src=t.avatar,e.forEach(e=>{const t=H(e);J.append(t)})}).catch(console.error);const c=document.querySelector(".profile__avatar"),l=document.querySelector(".profile__edit-btn"),i=document.querySelector("#edit-profile-modal"),d=i.querySelector(".modal__close-btn"),u=i.querySelector(".modal__form"),m=i.querySelector(".modal__submit-btn"),_=i.querySelector("#profile-name-input"),h=i.querySelector("#profile-description-input"),v=document.querySelector(".profile__add-btn"),f=document.querySelector("#new-post-modal"),S=f.querySelector(".modal__close-btn"),y=f.querySelector(".modal__form"),b=f.querySelector(".modal__submit-btn"),p=f.querySelector("#card-image-input"),q=f.querySelector("#card-caption-input"),L=document.querySelector("#edit-avatar-modal"),E=L.querySelector(".modal__close-btn"),k=document.querySelector(".profile__avatar-btn"),C=L.querySelector(".modal__form"),g=L.querySelector(".modal__submit-btn"),U=L.querySelector("#profile-avatar-input"),x=document.querySelector("#preview-modal"),$=x.querySelector(".modal__close-btn"),A=x.querySelector(".modal__image"),I=x.querySelector(".modal__caption"),R=document.querySelector(".profile__name"),D=document.querySelector(".profile__description"),w=document.querySelector("#delete-avatar-modal"),P=w.querySelector(".modal__close-btn_delete"),T=w.querySelector(".modal__submit-btn-cancle"),B=w.querySelector(".modal__form");let N,O;w.querySelector(".modal__submit-btn"),B.addEventListener("submit",function(e){e.preventDefault();const t=e.submitter;o(t,!0),s.deleteCard(O).then(()=>{N.remove(),M(w)}).catch(console.error).finally(()=>{o(t,!1)})}),T.addEventListener("click",function(){M(w)});const j=document.querySelector("#card-template").content.querySelector(".card"),J=document.querySelector(".cards__list");function H(e){let t=j.cloneNode(!0);const r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),a=t.querySelector(".card__like-btn");return n.src=e.link,n.alt=e.name,r.textContent=e.name,e.isLiked&&a.classList.add("card__like-btn_active"),a.addEventListener("click",t=>{!function(e,t){const r=e.target.classList.contains("card__like-btn_active");s.changeLikeStatus(t._id,r).then(()=>e.target.classList.toggle("card__like-btn_active"))}(t,e)}),t.querySelector(".card__delete-btn").addEventListener("click",()=>{O=e._id,N=t,z(w)}),n.addEventListener("click",()=>{A.src=e.link,A.alt=e.name,I.textContent=e.name,z(x)}),t}function z(e){e.classList.add("modal_is-opened"),document.addEventListener("keydown",F)}function M(e){e.classList.remove("modal_is-opened"),document.removeEventListener("keydown",F)}function F(e){"Escape"===e.key&&M(document.querySelector(".modal_is-opened"))}var G;$.addEventListener("click",function(){M(x)}),l.addEventListener("click",function(){var r,n;r=u,n=e,[_,h].forEach(e=>{t(r,e,n)}),z(i),_.value=R.textContent,h.value=D.textContent}),d.addEventListener("click",function(){M(i)}),v.addEventListener("click",function(){z(f)}),S.addEventListener("click",function(){M(f)}),k.addEventListener("click",function(){z(L)}),E.addEventListener("click",function(){M(L)}),P.addEventListener("click",function(){M(w)}),u.addEventListener("submit",function(t){t.preventDefault();const r=t.submitter;a(r,!0),s.editUserInfo({name:_.value,about:h.value}).then(t=>{R.textContent=t.name,D.textContent=t.about,c.src=t.avatar,n(m,e),M(i)}).catch(console.error).finally(()=>{a(r,!1)})}),C.addEventListener("submit",function(t){t.preventDefault();const r=t.submitter;a(r,!0),s.editUserAvatar({avatar:U.value}).then(r=>{c.src=r.avatar,M(L),t.target.reset(),n(g,e)}).catch(console.error).finally(()=>{a(r,!1)})}),y.addEventListener("submit",function(t){t.preventDefault();const r=t.submitter;a(r,!0);const o={name:q.value,link:p.value};s.addCards(o).then(r=>{const a=H(r);J.prepend(a),t.target.reset(),n(b,e),M(f)}).catch(console.error).finally(()=>{a(r,!1)})}),document.querySelectorAll(".modal").forEach(e=>{e.addEventListener("click",t=>{t.target.classList.contains("modal")&&M(e)})}),G=e,document.querySelectorAll(G.formSelector).forEach(e=>{((e,n)=>{const a=Array.from(e.querySelectorAll(n.inputSelector)),o=e.querySelector(n.submitButtonSelector);r(a,o,n),a.forEach(s=>{s.addEventListener("input",function(){((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{e.querySelector(`#${t.id}-error`).textContent=r,t.classList.add(n.inputErrorClass)})(e,r,r.validationMessage,n)})(e,s,n),r(a,o,n)})})})(e,G)})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,